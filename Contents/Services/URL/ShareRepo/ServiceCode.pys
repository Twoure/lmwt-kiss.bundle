#!/usr/bin/env python

"""ShareRepo Service Code"""

HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'}

####################################################################################################
def NormalizeURL(url):

    if '/embed-' in url:
        return url.replace('/embed-', '/')

####################################################################################################
def MetadataObjectForURL(url):

    try:
        page = HTTP.Request(url).content
        html = HTML.ElementFromString(page)
    except:
        raise Ex.MediaNotAvailable

    title = html.xpath('//strong[@class="title"]/text()')
    if not title:
        raise Ex.MediaExpired

    thumb = 'http://i.imgur.com/75YO83o.jpg'
    rt = Regex(r'(?:\"|\')?image(?:\"|\')?\:(?:\s)?(?:\"|\')([^\"\']+)(?:\"|\')').search(page)
    if rt:
        thumb = rt.group(1)

    return VideoClipObject(
        title=title[0].strip(),
        thumb=thumb,
        source_title=url.split('/')[2].title()
        )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            video_resolution='sd',
            audio_channels=2,
            optimized_for_streaming=False,
            parts=[
                PartObject(key=Callback(PlayVideo, url=url))
                ]
            )
        ]

####################################################################################################
@indirect
def PlayVideo(url):

    page = HTTP.Request(url, headers=HTTP_HEADERS).content

    r = Regex(r'file\:(?:\s)?(?:\"|\')(http[^\"\']+(?<!m3u8|smil))(?:\"|\')').search(page)
    if r:
        Log.Debug('* PlayVideo URL = \"%s\"' %r.group(1))
        return IndirectResponse(VideoClipObject, key=r.group(1), http_headers=HTTP_HEADERS)

    raise Ex.MediaNotAvailable
